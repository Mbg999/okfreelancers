{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/classes/custom-validators.ts","webpack:///src/app/components/shared/footer/footer.component.ts","webpack:///src/app/components/shared/footer/footer.component.html","webpack:///src/app/components/shared/form-error-messages/form-error-messages.component.ts","webpack:///src/app/components/shared/form-error-messages/form-error-messages.component.html","webpack:///src/app/components/shared/navbar/navbar.component.ts","webpack:///src/app/components/shared/navbar/navbar.component.html","webpack:///src/app/components/shared/password-error-messages/password-error-messages.component.ts","webpack:///src/app/components/shared/password-error-messages/password-error-messages.component.html","webpack:///src/app/components/user-auth/login/login.component.ts","webpack:///src/app/components/user-auth/login/login.component.html","webpack:///src/app/components/user-auth/register/register.component.ts","webpack:///src/app/components/user-auth/register/register.component.html","webpack:///src/app/components/user-auth/user-auth.component.ts","webpack:///src/app/components/user-auth/user-auth.component.html","webpack:///src/app/components/user-profile/user-profile.component.ts","webpack:///src/app/components/user-profile/user-profile.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CustomValidators","c","test","value","required","missingLowerCases","missingUpperCases","missingNumbers","missingSpecialChars","FooterComponent","FormErrorMessagesComponent","NavbarComponent","PasswordErrorMessagesComponent","LoginComponent","fb","loginForm","group","email","minLength","d","console","log","errors","form","get","login","RegisterComponent","registerForm","maxLength","register","UserAuthComponent","UserProfileComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserAuthComponent } from './components/user-auth/user-auth.component';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\n\n\nconst routes: Routes = [\n  { path: '', component: UserAuthComponent, pathMatch: 'full' },\n  { path: 'MyProfile', component: UserProfileComponent },\n  { path: '**', component: UserAuthComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'okfreelancers';\n}\n","<div id=\"main-container\">\n  <header>\n    <app-navbar></app-navbar>\n  </header>\n  <main>\n    <router-outlet></router-outlet>\n  </main>\n  <footer>\n    <app-footer></app-footer>\n  </footer>\n</div>\n\n","// MODULES\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n//COMPONENTS\nimport { AppComponent } from './app.component';\nimport { UserAuthComponent } from './components/user-auth/user-auth.component';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\nimport { FooterComponent } from './components/shared/footer/footer.component';\nimport { LoginComponent } from './components/user-auth/login/login.component';\nimport { RegisterComponent } from './components/user-auth/register/register.component';\nimport { FormErrorMessagesComponent } from './components/shared/form-error-messages/form-error-messages.component';\nimport { PasswordErrorMessagesComponent } from './components/shared/password-error-messages/password-error-messages.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserAuthComponent,\n    UserProfileComponent,\n    NavbarComponent,\n    FooterComponent,\n    LoginComponent,\n    RegisterComponent,\n    FormErrorMessagesComponent,\n    PasswordErrorMessagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { FormControl, Validators, ValidationErrors, AbstractControl } from '@angular/forms';\n\n/**\n * Dedicated class for custom validations\n */\nexport class CustomValidators extends Validators {\n\n    // override\n    public static required(c: AbstractControl): ValidationErrors | null{\n        return /.*[^ ].*/.test(c.value) ? null : {\n            required: true\n        };\n    }\n\n    public static missingLowerCases(c: AbstractControl): ValidationErrors | null{\n        return /^(?=.*?[a-zá-üÁ-Ü]).{1,}$/.test(c.value) ? null : {\n            missingLowerCases: true\n        };\n    }\n\n    public static missingUpperCases(c: AbstractControl): ValidationErrors | null{\n        return /^(?=.*?[A-Zá-üÁ-Ü]).{1,}$/.test(c.value) ? null : {\n            missingUpperCases: true\n        };\n    }\n\n    public static missingNumbers(c: AbstractControl): ValidationErrors | null{\n        return /^(?=.*?[0-9]).{1,}$/.test(c.value) ? null : {\n            missingNumbers: true\n        };\n    }\n\n    public static missingSpecialChars(c: AbstractControl): ValidationErrors | null{\n        return /^(?=.*?[#?á-üÁ-Ü!@$%^&*-]).{1,}$/.test(c.value) ? null : {\n            missingSpecialChars: true\n        };\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'form-error-messages',\n  templateUrl: './form-error-messages.component.html',\n  styleUrls: ['./form-error-messages.component.css']\n})\nexport class FormErrorMessagesComponent {\n  @Input('control') public control: any;\n  \n}\n","<div class=\"text-danger\" *ngIf=\"control && control.errors && (control.dirty || control.touched)\">\n    <div *ngIf=\"control.errors.required\"><em>This field is required</em></div>\n    <div *ngIf=\"control.errors.unique\"><em>unique</em></div>\n    <div *ngIf=\"control.errors.lessThen\"><em>less then</em></div>\n    <div *ngIf=\"control.errors.greaterThan\"><em>greater than</em></div>\n    <div *ngIf=\"control.errors.email\"><em>Ha de ser una dirección de email válida</em></div>\n    <div *ngIf=\"control.errors.mobile\"><em>Ha de ser un número de teléfono válido</em></div>\n    <div *ngIf=\"control.errors.confirmPassword\"><em>confirma la contraseña bien omee</em></div>\n    <div *ngIf=\"control.errors.pattern\"><em>no cubre el patron requerido</em></div>\n    <div *ngIf=\"control.errors.minlength\">\n        <em>ha de tener al menos {{control.errors.minlength.requiredLength}} caracteres</em>\n    </div>\n    <div *ngIf=\"control.errors.maxlength\">\n        <em>ha de tener como máximo {{control.errors.maxlength.requiredLength}} caracteres</em>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>navbar works!</p>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'password-error-messages',\n  templateUrl: './password-error-messages.component.html',\n  styleUrls: ['./password-error-messages.component.css']\n})\nexport class PasswordErrorMessagesComponent {\n  @Input('password') public password: any;\n\n}\n","<div [ngClass]=\"{'text-danger': password?.errors}\" >\n    <div [ngClass]=\"{'text-success': !password.errors?.required}\">\n        <em>This field is required</em><br>\n    </div>\n    <div [ngClass]=\"{'text-success': !password.errors?.missingLowerCases}\">\n        <em>Una o más letras minúsculas</em><br>\n    </div>\n    <div [ngClass]=\"{'text-success': !password.errors?.missingUpperCases}\">\n        <em>Una o más letras mayúsculas</em><br>\n    </div>\n    <div [ngClass]=\"{'text-success': !password.errors?.missingNumbers}\">\n        <em>Uno o más números</em><br>\n    </div>\n    <div [ngClass]=\"{'text-success': !password.errors?.missingSpecialChars}\">\n        <em>Uno o más caracteres especiales (acentos, interrogaciones...)</em><br>\n    </div>\n    <div [ngClass]=\"{'text-success': !password.errors?.required && !password.errors?.minlength}\">\n        <em>ha de tener al menos 6 caracteres</em><br>\n    </div>\n\n    <!-- <div *ngIf=\"password.errors.confirmPassword\">\n        <em>confirma la contraseña bien omee</em><br>\n    </div> -->\n</div>","import { Component } from '@angular/core';\n\n// FORMS\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CustomValidators } from 'src/app/classes/custom-validators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  public loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.loginForm = fb.group({\n      'lemail': ['', [CustomValidators.required, Validators.email]],\n      'lpassword': ['', [\n        CustomValidators.required,\n        CustomValidators.missingLowerCases,\n        CustomValidators.missingUpperCases,\n        CustomValidators.missingNumbers,\n        CustomValidators.missingSpecialChars,\n        Validators.minLength(6)\n      ]]\n    });\n   }\n\n  public xd(d:any){\n    console.log(d.errors);\n  }\n\n  public login(form: FormGroup){\n    console.log(form);\n  }\n\n  get lemail(){\n    return this.loginForm.get('lemail');\n  }\n\n  get lpassword(){\n    return this.loginForm.get('lpassword');\n  }\n\n}\n","<div>\n    <form novalidate [formGroup]=\"loginForm\" (submit)=\"login(loginForm)\">\n        <div class=\"form-group\">\n            <label for=\"lemail\">Email</label>\n            <input type=\"text\" id=\"lemail\" formControlName=\"lemail\" class=\"form-control\">\n            <form-error-messages [control]=\"lemail\"></form-error-messages>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"lpassword\">Password</label>\n            <input type=\"password\" id=\"lpassword\" formControlName=\"lpassword\" class=\"form-control\">\n            <password-error-messages [password]=\"lpassword\"></password-error-messages>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\"\n        [disabled]=\"loginForm.invalid\">\n            Login\n        </button>\n    </form>\n</div>","import { Component } from '@angular/core';\n\n// FORMS\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CustomValidators } from 'src/app/classes/custom-validators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  public registerForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.registerForm = fb.group({\n      'email': ['', [\n        CustomValidators.required,\n        CustomValidators.email\n      ]],\n      'password': ['', [\n        CustomValidators.required,\n        CustomValidators.missingLowerCases,\n        CustomValidators.missingUpperCases,\n        CustomValidators.missingNumbers,\n        CustomValidators.missingSpecialChars,\n        CustomValidators.minLength(6)\n      ]],\n      'password_confirmation': ['', [CustomValidators.required]],\n      'name': ['', [\n        CustomValidators.required,\n        CustomValidators.minLength(2),\n        CustomValidators.maxLength(100)\n      ]],\n      'surnames': ['', [\n        CustomValidators.required,\n        CustomValidators.minLength(2),\n        CustomValidators.maxLength(100)\n      ]],\n      'born_date': ['', [CustomValidators.required]]\n    });\n   }\n\n  public xd(d:any){\n    console.log(d.errors);\n  }\n\n  public register(form: FormGroup){\n    console.log(form);\n  }\n\n  get email(){\n    return this.registerForm.get('email');\n  }\n\n  get password(){\n    return this.registerForm.get('password');\n  }\n\n  get name(){\n    return this.registerForm.get('name');\n  }\n\n  get surnames(){\n    return this.registerForm.get('surnames');\n  }\n\n  get born_date(){\n    return this.registerForm.get('born_date');\n  }\n\n}\n","<div>\n    <form novalidate [formGroup]=\"registerForm\" (submit)=\"register(registerForm)\">\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input type=\"text\" id=\"email\" formControlName=\"email\" class=\"form-control\">\n            <form-error-messages [control]=\"email\"></form-error-messages>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\">\n            <password-error-messages [password]=\"password\"></password-error-messages>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password_confirmation\">Confirm your password</label>\n            <input type=\"password\" id=\"password_confirmation\" formControlName=\"password_confirmation\" class=\"form-control\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\">\n            <form-error-messages [control]=\"name\"></form-error-messages>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"surnames\">surnames</label>\n            <input type=\"text\" id=\"surnames\" formControlName=\"surnames\" class=\"form-control\">\n            <form-error-messages [control]=\"surnames\"></form-error-messages>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"born_date\">born date</label>\n            <input type=\"date\" id=\"born_date\" formControlName=\"born_date\" class=\"form-control\">\n            <form-error-messages [control]=\"born_date\"></form-error-messages>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\"\n        [disabled]=\"registerForm.invalid\">\n            Register\n        </button>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-auth',\n  templateUrl: './user-auth.component.html',\n  styleUrls: ['./user-auth.component.css']\n})\nexport class UserAuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <!-- <app-login></app-login> -->\n    <app-register></app-register>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user-profile works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}